@baseurl=http://localhost:3000
@adminToken= eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1lbGxpc2F3YW5qYTI1NEBnbWFpbC5jb20iLCJzdWIiOiJjbWNhYnA2cmwwMDAwZzVubzk1endiMTM2Iiwicm9sZSI6IkFETUlOIiwiaWF0IjoxNzUwODM4MDgzLCJleHAiOjE3NTA4NDE2ODN9.jYFc0bAYPMGXgsE1yZ7a5ebyal4ELZ4TtR6AQ6HwdtE
@userToken= eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1lbGxpc2F3YW5qYTI1NEBnbWFpbC5jb20iLCJzdWIiOiI4MGJjZjlhNS1lNjZkLTRhMzctODc0OC0xNDdjMDg4YTM3MTQiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1MDYzNTU4MCwiZXhwIjoxNzUwNjM5MTgwfQ.CWhsJth9wun9pITXdd5xVynDsEenFE5avJ1bSvDy1ZU

@productId= a6c24f11-4359-4094-9353-88c4972383fa

#### Create product with file upload (admin only)
POST {{baseurl}}/products/create
Authorization: Bearer {{adminToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="name"

Smartphone XYZ
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

A high-performance smartphone with excellent camera quality
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="price"

799.99
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="stock"

50
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="image"; filename="smartphone.jpg"
Content-Type: image/jpeg

< /home/mel/Documents/images.jpeg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Get all products (public)
GET {{baseurl}}/products/all

### Get all products with pagination (public)
GET {{baseurl}}/products/all?page=1&limit=10

### Search products (public)
GET {{baseurl}}/products/search?query=smartphone&page=1&limit=10

### Get single product (public)
GET {{baseurl}}/products/{{productId}}

### Update product (admin only)
PUT {{baseurl}}/products/update/{{productId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "price": 749.99,
  "stock": 45
}

### Delete product (admin only)
DELETE {{baseurl}}/products/delete/{{productId}}
Authorization: Bearer {{adminToken}}

import { Body, Controller, Param, Put, UploadedFile, UseInterceptors } from '@nestjs/common';
import { FileInterceptor } from '@nestjs/platform-express';
import { UpdateProductDto } from './dtos/update-product.dto';
import { ProductsService } from './products.service';

@Controller('products')
export class ProductsController {
  constructor(private readonly productsService: ProductsService) {}

  @Put('update/:id')
  @UseInterceptors(FileInterceptor('image'))
  async updateProduct(
    @Param('id') id: string,
    @Body() body: any,
    @UploadedFile() file?: Express.Multer.File,
  ) {
    // Debugging the received payload
    console.log('Received Payload:', body);

    const updateProductDto: UpdateProductDto = {
      ...body,
      price: parseFloat(body.price), // Convert price to number
      stock: parseInt(body.stock, 10), // Convert stock to number
    };

    // Debugging the parsed payload
    console.log('Parsed Payload:', updateProductDto);

    return this.productsService.update(id, updateProductDto, file);
  }
}