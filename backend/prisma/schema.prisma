// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  role      UserRole @default(USER)
  status    UserStatus @default(ACTIVE)
  lastLogin DateTime?
  resetToken String? @unique
  resetTokenExpiry DateTime?
  @@map("users")
  Order Order[]
  Cart Cart[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  image       String?
  stock       Int       @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
  @@index([name], name: "idx_product_name")
  Order Order[]
  CartItem CartItem[]
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  orderStatus OrderStatus @default(PENDING)
  totalPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
  user     User    @relation(fields: [userId], references: [id])
  product  Product @relation(fields: [productId], references: [id])

  @@map("orders")
  @@index([userId], name: "idx_order_user_id")
}

model Cart {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("carts")
  @@index([userId], name: "idx_cart_user_id")
  CartItem CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
  @@index([cartId], name: "idx_cart_item_cart_id")
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

